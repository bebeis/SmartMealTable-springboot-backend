name: Build & Deploy to EC2

on:
  push:
    branches: [ development ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Build JAR with dev profile
        run: ./gradlew bootJar --no-daemon -Dspring.profiles.active=dev

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: docker.io/${{ secrets.DOCKERHUB_USER }}/smart-meal-table:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Setup SSH Key
        env:
          SSH_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

      - name: Deploy to EC2
        run: |
          ssh ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            # 1) 기존 컨테이너 제거
            docker rm -f smart-meal-table || true
            # 2) 최신 이미지 pull
            docker pull docker.io/${{ secrets.DOCKERHUB_USER }}/smart-meal-table:${{ github.sha }}
            # 3) 컨테이너 실행 (dev 프로파일)
            docker run -d \
              --name smart-meal-table \
              -v /home/ubuntu/app:/config \
              -e SPRING_PROFILES_ACTIVE=dev \
              -p 8080:8080 \
              docker.io/${{ secrets.DOCKERHUB_USER }}/smart-meal-table:${{ github.sha }}
          EOF
